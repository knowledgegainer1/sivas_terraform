pipeline {
    agent {
        node {
            label 'AGENT-1' // Corrected syntax: 'label' instead of '='
        }
    }
    options{
        ansiColor('xterm')
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
    }
    parameters {
        

        choice(name: 'CHOICE', choices: ['Apply', 'Destroy'], description: 'Pick something')

       
    }

    stages {
        stage('Init') {
            steps {
                sh """
                cd siva-terraform

                terraform init -reconfigure
                """
            }
        }
        stage('plan') {
            steps {
                sh """
                terraform plan
                """
            }
        }
       
        stage('apply') {
            when {
                expression { params.CHOICE == 'Apply' }
             }
            input{
                message"should we continue"
                ok"go a head"

            }
            steps {
                sh """
                  terraform apply -auto-approve
                """
            }
        }
        stage('Destroy') {
            when {
                expression { params.CHOICE == 'Destroy' }
             }
            input{
                message"should we continue"
                ok"go a head"

            }
            steps {
                sh """
                  terraform destroy -auto-approve
                """
            }
        }
    }
    post {
        always {
            echo 'will run always'
        }
        failure {
            echl "I will run on failuer"
        }
        success{
            echo "I will run on scuuess inly"
        }
    }
}

